<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于部署上线那些事~</title>
      <link href="/2024/02/14/%E5%85%B3%E4%BA%8E%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E5%93%AA%E4%BA%9B%E4%BA%8B~/"/>
      <url>/2024/02/14/%E5%85%B3%E4%BA%8E%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E5%93%AA%E4%BA%9B%E4%BA%8B~/</url>
      
        <content type="html"><![CDATA[<h3 id="1准备服务器"><a href="#1准备服务器" class="headerlink" title="1准备服务器"></a>1准备服务器</h3><p>购买服务器</p><p>为服务器初始化软件：宝塔面板（方便管理服务器）、Mysql、java环境、docker等。</p><h3 id="2前端"><a href="#2前端" class="headerlink" title="2前端"></a>2前端</h3><p><code>上线前准备</code>：前端上线对接后端地址。修改前端请求的后端地址。（编译阶段就区分好了环境）</p><p>&emsp;&emsp;开发环境：前端请求的是 localhost:XXXX 或者说是测试用的接口地址</p><p>&emsp;&emsp;上线环境：前端请求的是 xxxx.com/api 之类的正式地址</p><p><code>上线步骤</code>：</p><ol><li>本地打包构建。</li><li>给服务器安装Nginx。用Nginx等web服务器来提供访问前端服务能力</li><li>把dist网页目录放到<strong>服务器</strong>上。</li></ol><blockquote><p>纯css、js、html项目无需打包构建，使用了框架的项目需要打包构建为css、js、html项目。使用了框架建议参考官方文档部署项目。</p></blockquote><p><code>快速上线</code>：可以依赖宝塔面板快速部署上线</p><p>1.菜单栏添加站点（前提是安装了nginx才会有此页面）。</p><p><img src="/img/API%E6%8E%A5%E5%8F%A3%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0.assets/image-20240212142046166.png" alt="image-20240212142046166"></p><p>2.初始化站点信息。</p><p><img src="/img/API%E6%8E%A5%E5%8F%A3%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0.assets/image-20240212142315114.png" alt="image-20240212142315114"></p><p>3.将前端编译好的文件放到指定文件夹下。</p><p>4.默认该ip:80可以访问前端服务了。</p><h3 id="3后端"><a href="#3后端" class="headerlink" title="3后端"></a>3后端</h3><p><strong>关键：网络必须要连通</strong><br>如果自己学习用：单个服务器部署这三个项目就足够<br>如果你是搞大事，多个服务器建议在同一内网，内网交互会更快、且更安全</p><p><code>上线准备</code>：后端上线对接中间件、数据库地址（运行阶段区分环境）</p><p>&emsp;&emsp;开发环境：后端请求的数据库地址是 localhost:3306 ，请求的注册中心、redis等中间组件地址都是 localhost</p><p>&emsp;&emsp;上线环境：后端请求的地址是 xxxx.com:3306 之类的正式地址</p><p><code>上线步骤</code>：</p><ol><li>本地编译构建。</li><li>把jar包放到服务器上。</li><li>手动运行jar包。</li></ol><p><code>快速上线</code>：可以依赖宝塔面板快速部署上线</p><ol><li>上传java的jar包到服务器。</li><li>在网站菜单栏添加java项目。</li></ol><p><img src="/img/API%E6%8E%A5%E5%8F%A3%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0.assets/image-20240212145655615.png" alt="image-20240212145655615"></p><h3 id="4Docker部署"><a href="#4Docker部署" class="headerlink" title="4Docker部署"></a>4Docker部署</h3><p>Dockerfile用于指定构建 Docker 镜像的方法。</p><p>Docker构建优化：减少尺寸、减少构建时间（比如多阶段构建）</p><p><code>前端部署步骤</code>：</p><ol><li>本地打包dist包</li><li>本地编写Dockerfile文件（参考本项目）</li><li>将前端代码文件上传到云服务器。或者dist文件夹、docker文件夹、Dockerfile文件上传。</li><li>运行 docker build -t [标签名:标签版本]构建镜像</li></ol><p><code>后端部署步骤</code>：</p><ol><li>本地打包jar包</li><li>本地编写Dockerfile文件</li><li>将jar包和Dockerfile文件上传到云服务器</li><li>运行 docker build -t [标签名:标签版本]构建镜像</li></ol><blockquote><p><code>容器化后存在的问题</code>：各个容器的id地址不同且重启容器后ip会变化。<strong>代码中的localhost微服务之间的请求就失效了！！！</strong></p></blockquote><h3 id="5Docker平台部署"><a href="#5Docker平台部署" class="headerlink" title="5Docker平台部署"></a>5Docker平台部署</h3><ol><li>云服务商的容器平台（腾讯云、阿里云）</li><li>面向某个领域的容器平台（前端 webify、后端微信云托管）</li></ol><h3 id="6域名解析"><a href="#6域名解析" class="headerlink" title="6域名解析"></a>6域名解析</h3><ol><li>购买域名</li><li>解析域名</li><li>备案域名</li><li>配置nginx路由</li></ol><h3 id="7跨域问题解决"><a href="#7跨域问题解决" class="headerlink" title="7跨域问题解决"></a>7跨域问题解决</h3><p><strong>浏览器</strong>为了用户的安全，仅允许向<strong>同域名、同端口</strong>的服务器发送请求。</p><p>如何解决跨域：</p><ol><li>把前后端 域名、端口改成相同的</li><li>让服务器告诉浏览器允许跨域（返回cross-origin-allow响应头）</li><li>Nginx网关配置允许跨域。修改nginx.conf配置文件加响应头</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location ^~ /api/ &#123;</span><br><span class="line">    proxy_pass http:<span class="comment">//127.0.0.1:8080/api/;</span></span><br><span class="line">    add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> $http_origin;</span><br><span class="line">    add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">    add_header Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">    add_header Access-Control-Allow-Headers <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> ($request_method = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> $http_origin;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Access-Control-Max-Age&#x27;</span> <span class="number">1728000</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Content-Type&#x27;</span> <span class="string">&#x27;text/plain; charset=utf-8&#x27;</span>;</span><br><span class="line">        add_header <span class="string">&#x27;Content-Length&#x27;</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">204</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改后端服务允许跨域<ol><li>配置 @CrossOrigin 注解</li><li><strong>添加 web 请求拦截器</strong></li></ol></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局跨域配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wzy</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">// 覆盖所有请求</span></span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                <span class="comment">// 允许发送 Cookie</span></span><br><span class="line">                .allowCredentials(<span class="literal">true</span>)</span><br><span class="line">                <span class="comment">// 放行哪些域名（必须用 patterns，否则 * 会和 allowCredentials 冲突）</span></span><br><span class="line">                .allowedOriginPatterns(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .exposedHeaders(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>定义新的 CrossFilter Bean，参考：<a href="https://www.jianshu.com/p/b02099a435bd">https://www.jianshu.com/p/b02099a435bd</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 上线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> 上线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异常及其解决方案汇总（持续更新~）</title>
      <link href="/2024/02/14/%E5%BC%82%E5%B8%B8%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%B1%87%E6%80%BB%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0~%EF%BC%89/"/>
      <url>/2024/02/14/%E5%BC%82%E5%B8%B8%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%B1%87%E6%80%BB%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0~%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h1><h3 id="1-service层编写原则"><a href="#1-service层编写原则" class="headerlink" title="1.service层编写原则"></a>1.service层编写原则</h3><blockquote><p> 小心service组件循环依赖问题！！！</p></blockquote><ol><li><strong>Controller调用Service层是：一对一接口调用</strong>，且Controller层不做任何业务处理，目的是为了后续拓展直接替换Controller为RPC框架而准备</li><li><strong>Service层避免互相调用</strong>：一般情况下事物配置在service层，为了避免事物嵌套或单个事物过大等问题的</li><li><strong>service层调用dao层</strong>：除了尽量控制事物大小，即控制Service调用dao层的复杂度，将单个事物经量控制在100ms之内</li></ol><hr><h1 id="springMVC"><a href="#springMVC" class="headerlink" title="springMVC"></a>springMVC</h1><h3 id="1-java-web项目-springmvc-xml-配置文件错误"><a href="#1-java-web项目-springmvc-xml-配置文件错误" class="headerlink" title="1.java web项目 springmvc.xml 配置文件错误"></a>1.java web项目 springmvc.xml 配置文件错误</h3><p>==问题提示：==java web项目 springmvc.xml 配置文件错误。抛出异常<code>Cannot resolve reference to bean ‘cacheManager‘ while setting bean property ‘cacheManager‘</code>。</p><p>==解决办法：==检查 springmvc.xml 配置文件的命名空间，将自动导入的cache改为mvc。</p><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20231007113928748.png" alt="image-20240214165413128"></p><hr><h1 id="Mybatis-plus"><a href="#Mybatis-plus" class="headerlink" title="Mybatis-plus"></a>Mybatis-plus</h1><h3 id="1-mybatis与mybatis-plus版本不兼容问题NoSuchMethodError"><a href="#1-mybatis与mybatis-plus版本不兼容问题NoSuchMethodError" class="headerlink" title="1.mybatis与mybatis-plus版本不兼容问题NoSuchMethodError"></a>1.mybatis与mybatis-plus版本不兼容问题NoSuchMethodError</h3><p>==问题提示：==java.lang.NoSuchMethodError: org.apache.ibatis.session.Configuration.setArgNameBasedConstructorAutoMapping(Z)V</p><p>==解决办法：==在mybatis-plus源码中找其依赖的mybatis版本！！！</p><h3 id="2-Mybatis-plus批量操作"><a href="#2-Mybatis-plus批量操作" class="headerlink" title="2.Mybatis-plus批量操作"></a>2.Mybatis-plus批量操作</h3><blockquote><p>不要使用Iservice提供的saveBatch，耗时最多循环插入都比它快。<a href="https://juejin.cn/post/7189163819825332284">各种批量插入方式效率分析</a></p></blockquote><p>默认BaseMapper没有insertBatch()方法，实现方式有：</p><ol><li>编写Mapper接口和Mapper.xml。自定义insertBatch()方法</li><li>使用mybatis-plus提供了<a href="https://gitee.com/baomidou/mybatis-plus-samples/tree/master/mybatis-plus-sample-sql-injector">InsertBatchSomeColumn</a>批量insert方法<ol><li>自定义sql注入类继承DefaultSqlInjector </li><li>mybatiplus配置类配置自定义sql注入新类的bean</li><li>创建MyBaseMapper接口继承BaseMapper接口，并添加抽象方法 <code>int insertBatchSomeColumn(List&lt;T&gt; entityList);</code></li><li>自定义的Mapper继承MyBaseMapper</li><li>service调用</li></ol></li><li>官网提供的<a href="https://baomidou.com/pages/33c2c2/">MybatisBatch</a>实现批量操作，支持insert、update、delete</li></ol><p>可以开启<strong>mysql的批处理</strong>支持<code>jdbc:mysql://localhost:3306/wzyapi?rewriteBatchedStatements=true</code>提高批处理速度。</p><p>还可以开启<strong>mybatis-plus的批处理模式</strong>。在application.yaml中配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">executor-type:</span> <span class="string">batch</span></span><br></pre></td></tr></table></figure><h3 id="3、mysql账号密码错误而导致的无法连接"><a href="#3、mysql账号密码错误而导致的无法连接" class="headerlink" title="3、mysql账号密码错误而导致的无法连接"></a>3、mysql账号密码错误而导致的无法连接</h3><p>==问题提示==：突然不能连接数据库了。云服务商改了mysql的账号密码。</p><p>==解决办法==：查看账号修改密码。并设置root用户 <code>&#39;root&#39;@&#39;%&#39;</code> 任意ip可访问。小心不是‘root‘@’0.0.0.0’！！！这样不生效！！！</p><hr><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h3 id="1-npm认证过期，证书过期"><a href="#1-npm认证过期，证书过期" class="headerlink" title="1.npm认证过期，证书过期"></a>1.npm认证过期，证书过期</h3><p>==问题提示：==npm ERR! code CERT_HAS_EXPIRED 。npm认证过期，证书过期问题。</p><p>==解决办法：==CERT_HAS_EXPIRED是一个由<a href="https://so.csdn.net/so/search?q=Node.js&spm=1001.2101.3001.7020">Node.js</a>和npm抛出的错误，表示你正在尝试访问的服务器的SSL证书已经过期。</p><ol><li><p>清除npm缓存：<code>npm cache clean --force</code></p></li><li><p>取消ssl验证：<code>npm config set strict-ssl false</code></p></li><li><p>之后再<code>npm install</code> 你想安装的东西</p></li></ol><h3 id="2-echarts-for-react做图时，图数据不实时变化"><a href="#2-echarts-for-react做图时，图数据不实时变化" class="headerlink" title="2.echarts-for-react做图时，图数据不实时变化"></a>2.echarts-for-react做图时，图数据不实时变化</h3><blockquote><p>困扰1小时！！！</p></blockquote><p>==问题提示：==定义了一个<code>const option</code>变量传递给图，其中<code>option.tilte.text</code>是一个字面量。因为定义的为常量，所以后续js中改变option.title.text就会失效。</p><p>==解决办法：==定义<code>const option</code>变量时将<code>option.tilte.text</code>也定义为变量。通过setTiltle实时变化数据！！！</p><h3 id="3-HttpMessageNotReadableException"><a href="#3-HttpMessageNotReadableException" class="headerlink" title="3.HttpMessageNotReadableException"></a>3.HttpMessageNotReadableException</h3><p>==问题提示：==HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type <code>java.lang.String</code> from Object value (token <code>JsonToken.START_OBJECT</code>)</p><p>前端json对象（HttpMessage）无法反序列化为后端String对象。因为这样的话需要先反序列化，再序列化，但是默认HTTP请求处理只会反序列化。</p><p>==解决办法：==前端数据输入修改正常。</p><h3 id="4-Ant-Design图标"><a href="#4-Ant-Design图标" class="headerlink" title="4.Ant Design图标"></a>4.Ant Design图标</h3><p>三种表示图标的方法：</p><ol><li><p><code>&lt;MessageOutlined /&gt;</code></p></li><li><p><code>icon=&#123;MessageOutlined&#125;</code></p></li><li><p><code>icon=&quot;message&quot;</code></p></li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取全局属性。用户信息</span></span><br><span class="line"><span class="keyword">const</span> &#123; initialState &#125; = <span class="title function_">useModel</span>(<span class="string">&#x27;@@initialState&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; loginUser &#125; = initialState || &#123;&#125;;</span><br></pre></td></tr></table></figure><h3 id="5-ant-design-pro修改前端项目的路径后，运行后报错"><a href="#5-ant-design-pro修改前端项目的路径后，运行后报错" class="headerlink" title="5.ant-design-pro修改前端项目的路径后，运行后报错"></a>5.ant-design-pro修改前端项目的路径后，运行后报错</h3><p>==问题提示：== Can not resolve dependence ‘ant-design-pro/node_modules/@umijs/renderer-react’, please install it.</p><p>==解决办法：==删除新路径中的 如：<code>E:\dev\new-ant-design-pro\node_modules\</code> 的文件夹 <code>.cache</code>。 再重新运行项目</p><h3 id="6-前端在打包构建时报错冲突"><a href="#6-前端在打包构建时报错冲突" class="headerlink" title="6.前端在打包构建时报错冲突"></a>6.前端在打包构建时报错冲突</h3><p>==解决办法：==删除原来dist文件</p><h3 id="7-Ant-Design-Pro前端上线后出现404页面请求"><a href="#7-Ant-Design-Pro前端上线后出现404页面请求" class="headerlink" title="7.Ant Design Pro前端上线后出现404页面请求"></a>7.Ant Design Pro前端上线后出现404页面请求</h3><p>==解决办法：==将umi路由方式从默认的browser改为<a href="https://pro.ant.design/zh-CN/docs/deploy#%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E7%BB%93%E5%90%88">hash路由</a>。</p><h3 id="8-浏览器前端请求本质"><a href="#8-浏览器前端请求本质" class="headerlink" title="8.浏览器前端请求本质"></a>8.浏览器前端请求本质</h3><p>将nginx中的前端代码获取到浏览器中渲染。</p><p>umi框架在使用build时自动传入了NODE_ENV == prod</p><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h3 id="1-json字符串转具体泛型对象，例如BaseResopnse-lt-String-gt"><a href="#1-json字符串转具体泛型对象，例如BaseResopnse-lt-String-gt" class="headerlink" title="1.json字符串转具体泛型对象，例如BaseResopnse&lt;String&gt;"></a>1.json字符串转具体泛型对象，例如<code>BaseResopnse&lt;String&gt;</code></h3><blockquote><p>困扰1小时！！！</p></blockquote><p>==问题提示：==1.使用原始泛型类型为变量类型报警。2.<code>BaseResopnse</code>类型值不能赋值到<code>BaseResopnse&lt;String&gt;</code>变量上。</p><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240206203540636.png" alt="image-20240206203540636"></p><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240206203756240.png" alt="image-20240206203756240"></p><p>==解决办法：==使用方法<code>JSONUtil.toBean(result, new TypeReference&lt;BaseResponse&lt;String&gt;&gt;() &#123;&#125;,false)</code>。即可返回泛型类型的对象值。</p><h3 id="2-java-lang-LinkageError【devtools导致】"><a href="#2-java-lang-LinkageError【devtools导致】" class="headerlink" title="2.java.lang.LinkageError【devtools导致】"></a>2.java.lang.LinkageError【devtools导致】</h3><blockquote><p>困扰1小时！！！</p></blockquote><p>==问题提示：==两个类加载器<code>RestartClassLoader</code>和<code>Launcher$AppClassLoader</code>加载同一个方法签名冲突。devtools两个类加载器加载同一个类导致的LinkageError。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java.lang.LinkageError: loader constraint violation: </span><br><span class="line">when resolving method <span class="string">&quot;com.wzy.wzyapiclientsdk.client.WzyApiClient.getUserNameByPost(Lcom/wzy/wzyapiclientsdk/model/User;)Lcom/wzy/wzyapicommon/common/BaseResponse;&quot;</span> </span><br><span class="line">the class loader (instance of org/springframework/boot/devtools/restart/classloader/RestartClassLoader) of the current class, com/wzy/project/controller/InterfaceInfoController, </span><br><span class="line">and the class loader (instance of sun/misc/Launcher<span class="variable">$AppClassLoader</span>) <span class="keyword">for</span> the method<span class="string">&#x27;s defining class, com/wzy/wzyapiclientsdk/client/WzyApiClient, </span></span><br><span class="line"><span class="string">have different Class objects for the type com/wzy/wzyapicommon/common/BaseResponse used in the signature</span></span><br></pre></td></tr></table></figure><p>LinkageError: loader constraint violation: when resolving method the class loader of the current class,and the class loader for the method have different Class objects for the type used in the signature</p><p>==解决办法：==LinkageError出现的情况复杂，一般发生在被多个类加载器加载的类发生交互时出现。这里是由于springboot装配devtools后，类被加载两次导致。</p><p>devtools加载了两次后，导致有两个类型的BaseResponse，最终导致调用方法getUserNameByPost时类型转换异常。解决办法就是去掉devtools依赖。<a href="https://blog.csdn.net/tongyimplin/article/details/80983272">https://blog.csdn.net/tongyimplin/article/details/80983272</a></p><h3 id="3-java-反射调用函数问题（实际是HttpUtil客户端使用错误抛出的异常）"><a href="#3-java-反射调用函数问题（实际是HttpUtil客户端使用错误抛出的异常）" class="headerlink" title="3.java 反射调用函数问题（实际是HttpUtil客户端使用错误抛出的异常）"></a>3.java 反射调用函数问题（实际是HttpUtil客户端使用错误抛出的异常）</h3><p>==问题提示：==java.lang.reflect.InvocationTargetException调用失败</p><p>==解决办法：==此异常是被调用函数抛出的异常。需要检查被调用函数逻辑。注意使用Hutool发送请求时，不要设置<code>int[]</code>类型的参数，不要使用原始类似数组，否则会报异常，如果传入了原始类型数组，转换一下为包装类似数组。Hutool源码如下:</p><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240209183009094.png" alt="image-20240209183009094"></p><blockquote><p> List.toArray(需要输入数组对象)。否则创建的是 Object[] 对象</p></blockquote><p>==JSONArray里面只包括JSONObject、JSONArray和原始数据类型！！！==JSON对象很方便转换解析为为Bean对象，而JSON数组不方便转换为Bean对象。</p><h3 id="4-云服务器上的mysql不允许连接"><a href="#4-云服务器上的mysql不允许连接" class="headerlink" title="4.云服务器上的mysql不允许连接"></a>4.云服务器上的mysql不允许连接</h3><p>==问题提示：==mysql不允许链接</p><p>==解决办法：==</p><ol><li>云服务器防火墙开通3306</li><li>mysql的root用户权限默认本地登录访问。改为远程登录访问。</li><li>mysql配置的bind-address改为 0.0.0.0</li></ol><h3 id="5-云服务器上Nacos后端无法连接"><a href="#5-云服务器上Nacos后端无法连接" class="headerlink" title="5.云服务器上Nacos后端无法连接"></a>5.云服务器上Nacos后端无法连接</h3><p>==问题提示：==NacosException: Client not connected, current status:STARTING</p><p>==解决办法：==nacos需要开放三个端口8848、9848、9849。</p><h3 id="6-IDEA中java代码打包问题"><a href="#6-IDEA中java代码打包问题" class="headerlink" title="6.IDEA中java代码打包问题"></a>6.IDEA中java代码打包问题</h3><p>==问题提示：==java打包后只有.jar文件。没有.jar.original文件。且打包后的文件内容格式混乱，打开后不是org/META_INF/BOOT_INF三个文件夹。</p><p>==解决办法：==</p><p>修改pom.xml文件将spring-boot-maven-plugin插件配置好。配置主类加executions标签、去掉skip标签。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--     war包打包插件       --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--jar包打包插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.wzy.wzyapiinterface.WzyapiInterfaceApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-上线错误缺失类com-google-protobuf-Message"><a href="#7-上线错误缺失类com-google-protobuf-Message" class="headerlink" title="7.上线错误缺失类com.google.protobuf.Message"></a>7.上线错误缺失类com.google.protobuf.Message</h3><p>==问题提示==：缺失类com.google.protobuf.Message（缺失protobuf-java的依赖）</p><p>==解决办法：==安装依赖包protobuf-java，重新打包。</p><h3 id="8、上线报错ConnectTimeoutException"><a href="#8、上线报错ConnectTimeoutException" class="headerlink" title="8、上线报错ConnectTimeoutException"></a>8、上线报错ConnectTimeoutException</h3><p>==问题提示==：网关报错io.netty.channel.ConnectTimeoutException: connection timed out: /111.231.72.191:8123</p><p>==解决办法==：网关请求不到此端口。云服务器防火墙开放端口8123</p><h3 id="9、SpringBoot读取依赖模块中application-yml配置失效问题"><a href="#9、SpringBoot读取依赖模块中application-yml配置失效问题" class="headerlink" title="9、SpringBoot读取依赖模块中application.yml配置失效问题"></a>9、SpringBoot读取依赖模块中application.yml配置失效问题</h3><p>==问题提示==：A项目依赖B.jar包，其中B.jar包装包含配置文件application.yaml，同时A项目中也包含配置文件application.yaml。运行A项目报错 <code>IllegalArgumentException: Could not resolve placeholder</code> 配置的属性。<a href="https://blog.lonelyman.site/archives/36">https://blog.lonelyman.site/archives/36</a></p><p>==解决办法==：springboot 如果自身有<code>application.yml</code>，就会覆盖依赖模块的同名配置文件。由于在<code>client-service</code>模块创建了<code>application.yml</code>，导致<code>common</code>模块的<code>application.yml</code>被覆盖。所以将配置转移到依赖模块中或者重命名配置文件名。</p><hr><h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><h3 id="1-一个项目启动多个实例"><a href="#1-一个项目启动多个实例" class="headerlink" title="1.一个项目启动多个实例"></a>1.一个项目启动多个实例</h3><p>==问题提示：==允许多个实例运行后，直接修改原配置文件。导致原java进程也改变了服务端口，原java进程是基于target文件夹未压缩的class文件运行的。</p><p>==解决办法：==</p><ol><li>设置允许多实例运行。</li></ol><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240204233858018.png" alt="image-20240204233858018"></p><ol start="2"><li>在service窗口复制配置。</li></ol><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240204233957103.png" alt="image-20240204233957103"></p><ol start="3"><li>在环境变量修改服务端口号和其它使用到的端口号。</li></ol><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240204234148489.png" alt="image-20240204234148489"></p><ol start="4"><li>运行该配置。</li></ol><h3 id="2-xml文件未引入spring-boot项目"><a href="#2-xml文件未引入spring-boot项目" class="headerlink" title="2.xml文件未引入spring boot项目"></a>2.xml文件未引入spring boot项目</h3><p>==问题提示：==spring boot项目下编写xml文件到resources目录提示Application context not configured for this file</p><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240205091824617.png" alt="image-20240205091824617"></p><p>==解决办法：==原因是idea识别到xml文件未引入项目。需要在spring boot启动类上加注解<code>@ImportResource(&#123;&quot;classpath:dubbo-consumer.xml&quot;&#125;)</code>用于引入在.xml文件中定义的beans。</p><hr><p>最近遇到的数据库被勒索😈😈😈</p><p><img src="/img/%E5%BC%82%E5%B8%B8%E7%BB%9F%E8%AE%A1.assets/image-20240214110013598.png" alt="image-20240214110013598"></p><p>笑嘻嘻，建议大家数据库密码还是要设置复制一些</p>]]></content>
      
      
      <categories>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux虚拟机的创建（基于VirtualBox）</title>
      <link href="/2023/01/06/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%88%9B%E5%BB%BA%EF%BC%88%E5%9F%BA%E4%BA%8EVirtualBox%EF%BC%89/"/>
      <url>/2023/01/06/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%88%9B%E5%BB%BA%EF%BC%88%E5%9F%BA%E4%BA%8EVirtualBox%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="一、安装VirtualBox"><a href="#一、安装VirtualBox" class="headerlink" title="一、安装VirtualBox"></a>一、安装VirtualBox</h2><p>1.下载VirtualBox</p><p>下载地址：<a href="https://download.virtualbox.org/virtualbox/6.0.10/VirtualBox-6.0.10-132072-Win.exe">https://download.virtualbox.org/virtualbox/6.0.10/VirtualBox-6.0.10-132072-Win.exe</a></p><p>2.开始安装</p><img src="\img\3\image-20230106175835756.png" alt="image-20230106175835756" style="zoom:50%;" /><p>3.更改安装路径，下一步。后续默认选项进行安装。</p><img src="\img\3\image-20230106180015348.png" alt="image-20230106180015348" style="zoom:50%;" /><img src="\img\3\image-20230106180112522.png" alt="image-20230106180112522" style="zoom:50%;" /><h2 id="二、利用Vagrant安装Centos的镜像快速创建虚拟机"><a href="#二、利用Vagrant安装Centos的镜像快速创建虚拟机" class="headerlink" title="二、利用Vagrant安装Centos的镜像快速创建虚拟机"></a>二、利用Vagrant安装Centos的镜像快速创建虚拟机</h2><p>1.安装Vagrant</p><p>安装包下载地址：<a href="https://releases.hashicorp.com/vagrant/2.2.5/vagrant_2.2.5_x86_64.msi">https://releases.hashicorp.com/vagrant/2.2.5/vagrant_2.2.5_x86_64.msi</a></p><p>按默认步骤安装即可，安装后需要重启电脑。</p><p>2.安装虚拟机镜像</p><p>打开CMD命令行，输入下方命令，即在当前目录创建了Vagrantfile文件。执行vagrant up后就完成了虚拟机的基本创建。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vagrant init centos #初始化</span><br><span class="line"></span><br><span class="line">vagrant up #联网安装虚拟机镜像</span><br><span class="line"></span><br><span class="line">vagrant ssh #连接虚拟机</span><br></pre></td></tr></table></figure><img src="\img\3\image-20230106185103294.png" alt="image-20230106185103294" style="zoom:100%;" /><img src="\img\3\image-20230106185853296.png" alt="image-20230106185853296" style="zoom:60%;" /><h2 id="三、配置网络IP"><a href="#三、配置网络IP" class="headerlink" title="三、配置网络IP"></a>三、配置网络IP</h2><p>默认虚拟机的ip地址不是固定ip，开发不方便。</p><p>1.使用ipconfig查看virtualbox的网卡地址，我们设置的地址需要与此地址保证同一网段，如图应设为192.168.56.*。</p><img src="\img\3\image-20230106191841746.png" alt="image-20230106191841746" style="zoom:60%;" /><p>2.修改Vagrantfile文件配置ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vm.network &quot;private_network&quot;, ip: &quot;192.168.56.10&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux虚拟机的创建（基于VMware）</title>
      <link href="/2023/01/06/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%88%9B%E5%BB%BA%EF%BC%88%E5%9F%BA%E4%BA%8EVMware%EF%BC%89/"/>
      <url>/2023/01/06/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%88%9B%E5%BB%BA%EF%BC%88%E5%9F%BA%E4%BA%8EVMware%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="一、配置硬件"><a href="#一、配置硬件" class="headerlink" title="一、配置硬件"></a>一、配置硬件</h2><p>1.点击“创建新的虚拟机”，打开向导，点击自定义。</p><img src="\img\2\image-20230105232534485.png" alt="image-20230105232534485" style="zoom: 33%;" /><img src="\img\2\image-20230105232648819.png" alt="image-20230105232648819" style="zoom:50%;" /><img src="\img\2\image-20230105232852309.png" alt="image-20230105232852309" style="zoom:50%;" /><p>2.点击“稍后安装操作系统”，先配置硬件，再安装操作系统软件，点击下一步。选择预安装操作系统和对应的版本，点击下一步。</p><img src="\img\2\image-20230105233000827.png" alt="image-20230105233000827" style="zoom:50%;" /><img src="\img\2\image-20230105233138197.png" alt="image-20230105233138197" style="zoom:50%;" /><p>3.修改你的虚拟机名字，和虚拟机文件保存位置，点击下一步。</p><img src="\img\2\image-20230105233358467.png" alt="image-20230105233358467" style="zoom:50%;" /><p>4.设置CPU核数、内存、网络连接、硬盘、设置磁盘地址（最好与虚拟机文件地址一致），最后点击完成。</p><img src="\img\2\image-20230105233841558.png" alt="image-20230105233841558" style="zoom:50%;" /><img src="\img\2\image-20230105234003887.png" alt="image-20230105234003887" style="zoom:50%;" /><img src="\img\2\image-20230105234206932.png" alt="image-20230105234206932" style="zoom:50%;" /><img src="\img\2\image-20230105234308080.png" alt="image-20230105234308080" style="zoom:50%;" /><img src="\img\2\image-20230105234531880.png" alt="image-20230105234531880" style="zoom:50%;" /><img src="\img\2\image-20230105234651303.png" alt="image-20230105234651303" style="zoom:50%;" /><img src="\img\2\image-20230105234753243.png" alt="image-20230105234753243" style="zoom:50%;" /><h2 id="二、安装系统软件"><a href="#二、安装系统软件" class="headerlink" title="二、安装系统软件"></a>二、安装系统软件</h2><p>1.导入Linux的镜像ISO文件。</p><img src="\img\2\image-20230105235222902.png" alt="image-20230105235222902" style="zoom: 33%;" /><img src="\img\2\image-20230105235337839.png" alt="image-20230105235337839" style="zoom:50%;" /><p>2.点击开启虚拟机，开始系统的安装过程，这部分简单跳过，只展示出一些重点步骤的建议选项。</p><img src="\img\2\image-20230105235435033.png" alt="image-20230105235435033" style="zoom: 33%;" /><img src="\img\2\image-20230106000421051.png" alt="image-20230106000421051" style="zoom:50%;" /><p>3.配置分区，1g的/boot文件系统改为标准分区ext4,4g的/swap文件系统为swap，55g的/文件系统为标准分区ext4。</p><img src="\img\2\image-20230106000721768.png" alt="image-20230106000721768" style="zoom:50%;" /><img src="\img\2\image-20230106000815789.png" alt="image-20230106000815789" style="zoom:50%;" /><img src="\img\2\image-20230106001003169.png" alt="image-20230106001003169" style="zoom:50%;" /><img src="\img\2\image-20230106001541753.png" alt="image-20230106001541753" style="zoom:50%;" /><img src="\img\2\image-20230106001848334.png" alt="image-20230106001848334" style="zoom:50%;" /><h2 id="三、配置网络IP和主机名称和主机名称映射"><a href="#三、配置网络IP和主机名称和主机名称映射" class="headerlink" title="三、配置网络IP和主机名称和主机名称映射"></a>三、配置网络IP和主机名称和主机名称映射</h2><p>1.配置静态的IP地址和主机名称。注意IP地址需要配置VMware和windows的和linux的，参考<a href="https://www.bilibili.com/video/BV1Qp4y1n7EN/?p=20&amp;vd_source=b17973d85879e1da10ae411ab7cb16ee%E3%80%82">https://www.bilibili.com/video/BV1Qp4y1n7EN/?p=20&amp;vd_source=b17973d85879e1da10ae411ab7cb16ee。</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33 #修改linux的静态ip配置 </span><br><span class="line"></span><br><span class="line">vim /etc/hostname #修改主机名称</span><br><span class="line"></span><br><span class="line">vim /etc/hosts #配置主机名称映射</span><br><span class="line"></span><br><span class="line">reboot #最后要重启生效</span><br></pre></td></tr></table></figure><p>/etc/sysconfig/network-scripts/ifcfg-ens33配置如下</p><img src="\img\2\image-20230106011126473.png" alt="image-20230106001848334" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《新业务政策和标准》12月</title>
      <link href="/2023/01/05/%E6%96%B0%E4%B8%9A%E5%8A%A1%E6%94%BF%E7%AD%96%E5%92%8C%E6%A0%87%E5%87%8612%E6%9C%88/"/>
      <url>/2023/01/05/%E6%96%B0%E4%B8%9A%E5%8A%A1%E6%94%BF%E7%AD%96%E5%92%8C%E6%A0%87%E5%87%8612%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<h2 id="第一部分-国家法律法规"><a href="#第一部分-国家法律法规" class="headerlink" title="第一部分 国家法律法规"></a>第一部分 国家法律法规</h2><h3 id="中共中央、国务院印发《扩大内需战略规划纲要（2022－2035年）》（12月14日）"><a href="#中共中央、国务院印发《扩大内需战略规划纲要（2022－2035年）》（12月14日）" class="headerlink" title="中共中央、国务院印发《扩大内需战略规划纲要（2022－2035年）》（12月14日）"></a>中共中央、国务院印发《扩大内需战略规划纲要（2022－2035年）》（12月14日）</h3><p>  《纲要》提出，加大生态环保设施建设力度。全面提升生态环境基础设施水平，构建集污水、垃圾、固废、危废、医废处理处置设施和监测监管能力于一体的环境基础设施体系，形成由城市向建制镇和乡村延伸覆盖的环境基础设施网络。实施重要生态系统保护和修复重大工程。推动建立生态保护补偿制度。全面推进资源高效利用，建设促进提高清洁能源利用水平、降低二氧化碳排放的生态环保设施。</p><h3 id="生态环境部印发《企业温室气体排放核算与报告指南-发电设施》和《企业温室气体排放核查技术指南-发电设施》（12月21日）"><a href="#生态环境部印发《企业温室气体排放核算与报告指南-发电设施》和《企业温室气体排放核查技术指南-发电设施》（12月21日）" class="headerlink" title="生态环境部印发《企业温室气体排放核算与报告指南 发电设施》和《企业温室气体排放核查技术指南 发电设施》（12月21日）"></a>生态环境部印发《企业温室气体排放核算与报告指南 发电设施》和《企业温室气体排放核查技术指南 发电设施》（12月21日）</h3><p>  为进一步提升碳排放数据质量，完善全国碳排放权交易市场制度机制，增强技术规范的科学性、合理性和可操作性，12月21日，生态环境部印发《企业温室气体排放核算与报告指南 发电设施》《企业温室气体排放核查技术指南 发电设施》的通知。</p><h2 id="第二部分-地方法律法规"><a href="#第二部分-地方法律法规" class="headerlink" title="第二部分 地方法律法规"></a>第二部分 地方法律法规</h2><h3 id="贵州省人民政府印发《关于加快建立健全绿色低碳循环发展经济体系的实施意见》（11月30日）"><a href="#贵州省人民政府印发《关于加快建立健全绿色低碳循环发展经济体系的实施意见》（11月30日）" class="headerlink" title="贵州省人民政府印发《关于加快建立健全绿色低碳循环发展经济体系的实施意见》（11月30日）"></a>贵州省人民政府印发《关于加快建立健全绿色低碳循环发展经济体系的实施意见》（11月30日）</h3><p>  《意见》提出，推进医疗废物信息化管理，实现一级以上医疗机构医疗废物可追溯，并逐步向乡镇卫生院、社区卫生服务中心延伸。推进设市城市实现餐厨垃圾处理能力全覆盖。加快县域生活垃圾焚烧处理全覆盖，配套建设焚烧飞灰处理设施，全省基本实现原生生活垃圾“零填埋”。</p><h3 id="北京市城管委员会印发《北京市”十四五”时期环境卫生事业发展规划》（12月21日）"><a href="#北京市城管委员会印发《北京市”十四五”时期环境卫生事业发展规划》（12月21日）" class="headerlink" title="北京市城管委员会印发《北京市”十四五”时期环境卫生事业发展规划》（12月21日）"></a>北京市城管委员会印发《北京市”十四五”时期环境卫生事业发展规划》（12月21日）</h3><p>  《规划》提出，强化科技赋能。开展恶臭污染物治理、渗滤液及浓缩液处理、厨余垃圾就地处理、小型化垃圾焚烧处理和焚烧炉渣资源化利用等技术研发与集成应用。</p><p>  有序推进厨余垃圾处理设施建设。2025年底前建成顺义、平谷、密云等区厨余垃圾处理技改、应急、新（扩）建项目，力争全市处理能力达到9000吨/日以上，补齐处理能力短板。推动农村地区厨余垃圾与农林有机废弃物协同处理，减少垃圾出村。加强废弃油脂回收、处置规范化管理体系建设。</p><h3 id="北京市发展改革委发布《关于征集基础设施REITs试点储备项目有关工作的通知》（12月19日）"><a href="#北京市发展改革委发布《关于征集基础设施REITs试点储备项目有关工作的通知》（12月19日）" class="headerlink" title="北京市发展改革委发布《关于征集基础设施REITs试点储备项目有关工作的通知》（12月19日）"></a>北京市发展改革委发布《关于征集基础设施REITs试点储备项目有关工作的通知》（12月19日）</h3><p>  《通知》指出，试点行业范围包括能源基础设施。包括风电、光伏发电、水力发电、天然气发电、生物质发电、核电等清洁能源项目，特高压输电项目，增量配电网、微电网、充电基础设施项目，分布式冷热电项目。</p><p>  还包括生态环保基础设施。包括城镇污水垃圾处理及资源化利用环境基础设施、固废危废医废处理环境基础设施、大宗固体废弃物综合利用基础设施项目。</p><h3 id="上海市经济信息化委等四部门联合印发《上海市工业领域碳达峰实施方案》（12月9日）"><a href="#上海市经济信息化委等四部门联合印发《上海市工业领域碳达峰实施方案》（12月9日）" class="headerlink" title="上海市经济信息化委等四部门联合印发《上海市工业领域碳达峰实施方案》（12月9日）"></a>上海市经济信息化委等四部门联合印发《上海市工业领域碳达峰实施方案》（12月9日）</h3><p>  《方案》提出，推动碳捕集利用与封存(CCUS)应用场景向化工、钢铁等其他行业拓展，加快与储能、氢能等技术的集成发展。大力推进氢能应用研究，研发清洁、高效、经济的工业副产氢提纯制氢技术，突破高能效氢燃料电池系统、长寿命电堆、质子交换膜等关键技术。推动高压供氢加氢设备、70兆帕储氢瓶等多重储运技术的应用。开展兆瓦级风力、光伏等新能源电解水制氢集成及应用示范。</p><p>  强化行业和区域协同处置能力。推进工业窑炉、工业企业间点对点协同处置固废，开展燃煤电厂、生活垃圾焚烧设施对市政污泥、工业固废、建筑垃圾等的协同处置，试点示范有机污泥、餐厨垃圾等在生物质能上的应用。</p><h3 id="上海市生态环境局印发《上海市“无废城市”建设工作方案（征求意见稿）》（11月29日）"><a href="#上海市生态环境局印发《上海市“无废城市”建设工作方案（征求意见稿）》（11月29日）" class="headerlink" title="上海市生态环境局印发《上海市“无废城市”建设工作方案（征求意见稿）》（11月29日）"></a>上海市生态环境局印发《上海市“无废城市”建设工作方案（征求意见稿）》（11月29日）</h3><p>  《方案》提出，全面实现原生生活垃圾零填埋。按照资源化利用和无害化处置并举的原则，继续推进宝山、浦东海滨等生活垃圾焚烧项目和老港二期、宝山湿垃圾项目建设，在老港、闵行、嘉定、松江、青浦、奉贤、崇明等区域再新建一批湿垃圾集中处理设施。</p><p>  建立平战结合的医疗废物收运处置体系。完善医疗废物应急收运处置体系，将生活垃圾焚烧设施纳入本市医疗废物应急处置设施清单。</p><p>  落实燃煤电厂、生活垃圾焚烧设施协同处置市政污泥、工业固废、建筑垃圾残渣等。妥善处理处置污泥。结合污水厂新建、扩建工程，完成浦东、嘉定、青浦等区污泥干化焚烧设施建设，推进燃煤电厂和垃圾焚烧厂污泥掺烧，到2025年实现全市污水厂污泥零填埋。新建一批通沟污泥处理设施，新增处理能力共计约10.5万吨/年。</p><h3 id="西藏自治区人民政府办公厅印发《西藏自治区“十四五”时期“无废城市”建设工作方案》（12月2日）"><a href="#西藏自治区人民政府办公厅印发《西藏自治区“十四五”时期“无废城市”建设工作方案》（12月2日）" class="headerlink" title="西藏自治区人民政府办公厅印发《西藏自治区“十四五”时期“无废城市”建设工作方案》（12月2日）"></a>西藏自治区人民政府办公厅印发《西藏自治区“十四五”时期“无废城市”建设工作方案》（12月2日）</h3><p>  《方案》要求，各市要因地制宜推进简便易行的垃圾分类和资源化利用方法，加强易腐烂垃圾就地处理和资源化利用。探索开展农村生活垃圾分类和资源化利用示范县创建工作。探索建设小型化、分散化、无害化处理设施，推进农牧区生活垃圾就地就近处理。各相关市95%的行政村实现农村生活垃圾收运处置体系全覆盖。</p><p>  实施好自治区危险废物处置中心二期项目和地(市)级医疗废物处置中心提标改造项目建设,有效提升危险废物(医疗废物)处置能力。加快推动日喀则市、山南市所辖偏远县小型医疗废物处置设施建设,解决医疗废物运距远、处置不及时的问题。</p><h3 id="宁夏回族自治区第十二届人民代表大会常务委员会通过《宁夏回族自治区固体废物污染环境防治条例》（11月30日）"><a href="#宁夏回族自治区第十二届人民代表大会常务委员会通过《宁夏回族自治区固体废物污染环境防治条例》（11月30日）" class="headerlink" title="宁夏回族自治区第十二届人民代表大会常务委员会通过《宁夏回族自治区固体废物污染环境防治条例》（11月30日）"></a>宁夏回族自治区第十二届人民代表大会常务委员会通过《宁夏回族自治区固体废物污染环境防治条例》（11月30日）</h3><p>  《条例》指出，产生、收集厨余垃圾的单位和其他生产经营者应当将厨余垃圾交由具备相应资质条件的单位进行无害化处理。禁止将厨余垃圾资源化产品作为食品销售或者用于食品生产。</p><p>  县级以上人民政府应当建立重大传染病疫情医疗废物应急处置保障体系，将危险废物焚烧设施、生活垃圾焚烧设施等纳入应急处置保障体系，明确集中隔离场所、封闭管理区域涉疫情医疗废物和生活垃圾的收集、贮存、运输要求，保障重大传染病疫情医疗废物处置安全。</p><p>  县级以上人民政府应当制定工业固体废物污染环境防治工作规划，组织建设工业固体废物集中处置等设施，支持推广减少工业固体废物产生量和降低工业固体废物危害性的生产工艺和设备，推动工业固体废物污染环境防治工作。</p><p>  城镇污水处理设施维护运营单位或者污泥处理处置单位应当安全处理处置污泥，保证处理处置后的污泥符合国家标准，建立污泥管理台账，对产生的污泥以及处理处置后的污泥去向、用途、用量等进行跟踪、记录，并向城镇排水、生态环境主管部门报告。</p><h3 id="河南省生态环境厅发布《河南省固体废物污染环境防治条例（征求意见稿）》（12月1日）"><a href="#河南省生态环境厅发布《河南省固体废物污染环境防治条例（征求意见稿）》（12月1日）" class="headerlink" title="河南省生态环境厅发布《河南省固体废物污染环境防治条例（征求意见稿）》（12月1日）"></a>河南省生态环境厅发布《河南省固体废物污染环境防治条例（征求意见稿）》（12月1日）</h3><p>  《条例》指出，县级以上人民政府统筹负责本行政区域内医疗废物收集、贮存、运输、处置体系的建设工作，实现县级以上医疗废物全收集、全处理，并逐步延伸到村镇地区。人口密集的县（市）可建设县级医疗废物处置设施。鼓励边远地区医疗机构配置移动式或小型处理设备实现就地消毒处理。</p><p>  新建、改建和扩建城镇污水处理厂，应当规划、建设污泥处理处置设施，保证污水处理厂产生的污泥无害化处置。</p><h3 id="宁夏回族自治区生态环境厅发布《宁夏回族自治区可再生能源发展“十四五”规划》（12月5日）"><a href="#宁夏回族自治区生态环境厅发布《宁夏回族自治区可再生能源发展“十四五”规划》（12月5日）" class="headerlink" title="宁夏回族自治区生态环境厅发布《宁夏回族自治区可再生能源发展“十四五”规划》（12月5日）"></a>宁夏回族自治区生态环境厅发布《宁夏回族自治区可再生能源发展“十四五”规划》（12月5日）</h3><p>  《规划》提出，宁夏自治区将加快推进垃圾发电在地级市全覆盖。加快建设固原、石嘴山等生活垃圾焚烧发电项目，实现地级市全覆盖目标。结合社会人口经济发展和城镇化建设进程，适时启动银川扩建、同心等生活垃圾焚烧发电项目。到2025年，垃圾焚烧发电处理能力超过5000吨/天，装机规模达到10万千瓦。</p><p>  大力发展离网型新能源电解水制氢，打造宁东光伏产业园绿氢规模化生产基地。培育风光+氢储能一体化应用模式，积极创建宁东可再生能源制氢耦合煤化工产业示范区，通过绿氢耦合煤制油、煤制烯烃、煤制乙二醇、煤基多联产等项目，推动灰氢转绿、以氢换煤、绿氢消碳。到2025年，力争绿氢生产规模达到8万吨/年。</p><p>  推广生物质成型燃料供热应用。结合清洁取暖、农村散煤治理和燃煤锅炉拆除等工作，加快生物质成型燃料在工业供热和民用采暖等领域推广应用。</p><h3 id="江西省住房和城乡建设厅等六部门联合印发《关于进一步加强农村生活垃圾收运处置体系建设管理的实施意见》（11月28日）"><a href="#江西省住房和城乡建设厅等六部门联合印发《关于进一步加强农村生活垃圾收运处置体系建设管理的实施意见》（11月28日）" class="headerlink" title="江西省住房和城乡建设厅等六部门联合印发《关于进一步加强农村生活垃圾收运处置体系建设管理的实施意见》（11月28日）"></a>江西省住房和城乡建设厅等六部门联合印发《关于进一步加强农村生活垃圾收运处置体系建设管理的实施意见》（11月28日）</h3><p>  《意见》指出，各地要按照生活垃圾收运处置体系自然村(村民小组)全覆盖的要求，合理配置收运处置设施设备，实现自然村有收集点(站)、乡镇有转运能力、县城有无害化处理能力。逐步取缔露天收集池，更新老旧破损垃圾收集容器，推动处理设施设备升级换代，建设一批小型化、分散化、无害化的生活垃圾处理设施。</p><h3 id="云南省第十三届人民代表大会常务委员会通过《云南省固体废物污染环境防治条例》（11月30日）"><a href="#云南省第十三届人民代表大会常务委员会通过《云南省固体废物污染环境防治条例》（11月30日）" class="headerlink" title="云南省第十三届人民代表大会常务委员会通过《云南省固体废物污染环境防治条例》（11月30日）"></a>云南省第十三届人民代表大会常务委员会通过《云南省固体废物污染环境防治条例》（11月30日）</h3><p>  《条例》提出，医疗卫生机构应当依法分类收集本单位产生的医疗废物，交由医疗废物集中处置单位处置。医疗废物集中处置单位应当及时收集、运输和处置医疗废物。鼓励发展移动式医疗废物处置设施，为偏远地区提供处置服务。</p><p>  县级以上人民政府城镇排水主管部门应当将污泥处理设施纳入城镇排水与污水处理规划，推动同步建设污泥处理设施与污水处理设施，鼓励协同处理，不断提高污泥综合利用和无害化处理水平。</p><h3 id="湖南省工业和信息化厅印发《湖南省工业领域碳达峰实施方案》（12月21日）"><a href="#湖南省工业和信息化厅印发《湖南省工业领域碳达峰实施方案》（12月21日）" class="headerlink" title="湖南省工业和信息化厅印发《湖南省工业领域碳达峰实施方案》（12月21日）"></a>湖南省工业和信息化厅印发《湖南省工业领域碳达峰实施方案》（12月21日）</h3><p>  《方案》提出，建立数字化碳管理体系。加强信息技术在能源消费与碳排放等领域的开发应用，鼓励企业基于能源管控系统建立数字化碳管理平台，协同推进用能数据与碳排放数据的收集、分析和管理。探索建设碳达峰碳中和综合服务平台，建立产品全生命周期碳排放基础数据库，深化重点行业碳排放实时监测。</p><p>  有序推进重点行业企业碳排放报告与核查机制，引导重点企业对标建立碳排放报告和信息披露制度。积极开展重点行业建设项目碳排放环境影响评价。引导企业积极参与绿电交易，做好绿电交易与绿证交易、碳排放权交易的衔接。</p><h3 id="吉林省人民政府办公厅印发《关于进一步加强生活垃圾处理工作的指导意见》（12月30日）"><a href="#吉林省人民政府办公厅印发《关于进一步加强生活垃圾处理工作的指导意见》（12月30日）" class="headerlink" title="吉林省人民政府办公厅印发《关于进一步加强生活垃圾处理工作的指导意见》（12月30日）"></a>吉林省人民政府办公厅印发《关于进一步加强生活垃圾处理工作的指导意见》（12月30日）</h3><p>  《意见》提出，推进生活垃圾焚烧处理设施建设，到2023年底，基本实现原生生活垃圾“零填埋”。到2025年底，生活垃圾焚烧处理能力进一步提升，地级及以上城市基本具备厨余垃圾集中处理能力。</p><p>  推进厨余垃圾处理。实施生活垃圾分类试点的城市要加快出台相关法规制度，明确厨余垃圾处理要求，以集中处理为主，分散处理为辅，有序推进厨余垃圾处理设施建设。鼓励厨余垃圾处理设施与生活垃圾焚烧处理设施同步、就近建设。</p>]]></content>
      
      
      <categories>
          
          <category> 政策 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 政策 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建（基于HEXO）</title>
      <link href="/2023/01/04/%E5%BF%AB%E9%80%9F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9F%BA%E4%BA%8EHEXO%EF%BC%89/"/>
      <url>/2023/01/04/%E5%BF%AB%E9%80%9F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9F%BA%E4%BA%8EHEXO%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客搭建（基于HEXO）"><a href="#个人博客搭建（基于HEXO）" class="headerlink" title="个人博客搭建（基于HEXO）"></a>个人博客搭建（基于HEXO）</h1><h2 id="一、安装环境"><a href="#一、安装环境" class="headerlink" title="一、安装环境"></a>一、安装环境</h2><h3 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h3><ul><li>下载node.js二进制安装包，这一步需要注意node.js与centos版本的匹配与兼容。</li></ul><img src="/img/1/image-20230104121014067.png" alt="image-20230104121014067" style="zoom:50%;" /><ul><li><p>下载后根据<a href="https://github.com/nodejs/help/wiki/Installation%E6%95%99%E7%A8%8B%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E3%80%82">https://github.com/nodejs/help/wiki/Installation教程进行安装。</a></p><ol><li>Unzip the binary archive to any directory you wanna install Node, I use <code>/usr/local/lib/nodejs</code></li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">VERSION=v10.15.0</span><br><span class="line">DISTRO=linux-x64</span><br><span class="line">sudo mkdir -p /usr/local/lib/nodejs</span><br><span class="line">sudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C /usr/local/lib/nodejs </span><br></pre></td></tr></table></figure><ol start="2"><li>Set the environment variable <code>~/.profile</code>, add below to the end</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Nodejs</span><br><span class="line">VERSION=v10.15.0</span><br><span class="line">DISTRO=linux-x64</span><br><span class="line">export PATH=/usr/local/lib/nodejs/node-$VERSION-$DISTRO/bin:$PATH</span><br></pre></td></tr></table></figure><ol start="3"><li>Refresh profile</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. ~/.profile</span><br></pre></td></tr></table></figure><ol start="4"><li>Test installation using</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm version</span><br><span class="line">$ npx -v</span><br></pre></td></tr></table></figure><ul><li>安装cnpm</li></ul><p>由于npm很慢，我们安装cnpm并配置淘宝镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ul><li>成功案例：博主使用centos7.5，node.js v16.9.0</li></ul><img src="/img/1/image-20230104121257507.png" alt="image-20230104121257507" style="zoom:50%;" /><ul><li>注意node.js版本限制，最好安装12.13.0以上的版本。</li></ul><img src="/img/1/image-20230104121449564.png" alt="image-20230104121449564" style="zoom:50%;" /><h3 id="2-安装HEXO"><a href="#2-安装HEXO" class="headerlink" title="2.安装HEXO"></a>2.安装HEXO</h3><ul><li>用cnpm包管理工具安装hexo</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><ul><li>验证安装完成hexo -v</li></ul><img src="/img/1/image-20230104123816448.png" alt="image-20230104123816448" style="zoom:50%;" /><h2 id="3-创建blog工程文件夹"><a href="#3-创建blog工程文件夹" class="headerlink" title="3.创建blog工程文件夹"></a>3.创建blog工程文件夹</h2>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
